@using front__wasm.Services
@inject CartService CartService
@inject IJSRuntime JSRuntime
@implements IDisposable

<header class="bg-[#11110c] text-white shadow-lg">
  <div class="container mx-auto px-4 h-20 flex flex-row justify-between items-center">
    <div class="flex items-center space-x-4">
      <NavLink href="/" Match="NavLinkMatch.All">
        <img src="images/wowahlogo.png" alt="WoW Logo" class="h-16 md:h-15 object-contain" />
      </NavLink>
    </div>
    
    <button @onclick="ToggleMobileMenu" class="md:hidden flex items-center">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>

    <nav class="hidden md:block">
      <ul class="flex flex-wrap justify-center space-x-4 md:space-x-6">
        <li><a href="/" class="hover:text-[#f1c533] transition">Home</a></li>
        <li><a href="/catalog" class="hover:text-[#f1c533] transition">Catálogo</a></li>
        <li><a href="/gold" class="hover:text-[#f1c533] transition">Gold</a></li>
        <li><a href="/dungeons" class="hover:text-[#f1c533] transition">Dungeons</a></li>
        <li><a href="/raids" class="hover:text-[#f1c533] transition">Raids</a></li>
        <li><a href="/pvp" class="hover:text-[#f1c533] transition">PvP</a></li>
        <li><a href="/itens" class="hover:text-[#f1c533] transition">Itens</a></li>
        <li>
          <a href="/cart" class="text-[#f1c533] hover:text-white transition relative">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
            </svg>
            @if (isInitialized)
            {
              <span class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs">@CartService.Count</span>
            }
          </a>
        </li>
      </ul>
    </nav>
  </div>

  <div class="md:hidden @(showMobileMenu ? "block" : "hidden") bg-[#11110c] border-t border-gray-800 shadow-lg">
    <ul class="flex flex-col py-3">
      <li><a href="/" class="block px-4 py-3 hover:bg-[#1e1e18] hover:text-[#f1c533] transition">Home</a></li>
      <li><a href="/catalog" class="block px-4 py-3 hover:bg-[#1e1e18] hover:text-[#f1c533] transition">Catálogo</a></li>
      <li><a href="/gold" class="block px-4 py-3 hover:bg-[#1e1e18] hover:text-[#f1c533] transition">Gold</a></li>
      <li><a href="/dungeons" class="block px-4 py-3 hover:bg-[#1e1e18] hover:text-[#f1c533] transition">Dungeons</a></li>
      <li><a href="/raids" class="block px-4 py-3 hover:bg-[#1e1e18] hover:text-[#f1c533] transition">Raids</a></li>
      <li><a href="/pvp" class="block px-4 py-3 hover:bg-[#1e1e18] hover:text-[#f1c533] transition">PvP</a></li>
      <li><a href="/itens" class="block px-4 py-3 hover:bg-[#1e1e18] hover:text-[#f1c533] transition">Itens</a></li>
      <li>
        <a href="/cart" class="flex items-center px-4 py-3 hover:bg-[#1e1e18] text-[#f1c533] transition">
          <span class="mr-2">Carrinho</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
          </svg>
          @if (isInitialized && CartService.Count > 0)
          {
            <span class="ml-1 bg-red-500 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs">@CartService.Count</span>
          }
        </a>
      </li>
    </ul>
  </div>
</header>

@code {
    private bool isInitialized = false;
    private bool showMobileMenu = false;
    
    protected override async Task OnInitializedAsync()
    {
        CartService.OnChange += StateHasChanged;
        
        await CartService.InitializeAsync();
        isInitialized = true;
        StateHasChanged();
    }
    
    public void Dispose()
    {
        CartService.OnChange -= StateHasChanged;
    }

    private void ToggleMobileMenu()
    {
        showMobileMenu = !showMobileMenu;
    }
}